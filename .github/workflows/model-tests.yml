name: Model Training and Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
        pip install numpy matplotlib pytest pytest-md
        sudo apt-get update
        sudo apt-get install -y graphviz
        pip install graphviz torchviz
    
    - name: Create directories
      run: |
        mkdir -p models
        mkdir -p visualizations
    
    - name: Train model
      env:
        CUDA_VISIBLE_DEVICES: ""
        TORCH_DEVICE: "cpu"
      run: |
        echo "Starting model training..."
        export SKIP_VIZ=1
        python train.py
        echo "Training completed."
    
    - name: Run tests
      env:
        CUDA_VISIBLE_DEVICES: ""
        TORCH_DEVICE: "cpu"
        SKIP_VIZ: 1
      run: |
        echo "Running model tests..."
        pytest tests/test_model.py -v -s
        echo "Testing completed."
    
    - name: Generate test summary
      run: |
        echo "## Training and Testing Results" >> $GITHUB_STEP_SUMMARY
        if [ -f "visualizations/model_architecture.txt" ]; then
          echo "### Model Parameters" >> $GITHUB_STEP_SUMMARY
          cat visualizations/model_architecture.txt >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f "test-summary.md" ]; then
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          cat test-summary.md >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: training-and-test-results
        path: |
          models/
          visualizations/
          test-summary.md
          .pytest_cache/
          
    - name: Check test results
      run: |
        if [ -f "test-summary.md" ]; then
          if grep -q "FAILED" test-summary.md; then
            echo "Tests failed!"
            exit 1
          else
            echo "All tests passed!"
          fi
        else
          echo "Test summary file not found!"
          exit 1
        fi